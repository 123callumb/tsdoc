// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`00 Tokenizer simple case 1`] = `
Object {
  "buffer": "/**[n] * line 1 [n] * line 2[n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": ">line 1<",
      "span": ">      <",
      "tokenKind": "PlainText",
    },
    Object {
      "indexOfLine": 0,
      "line": ">line 1<",
      "span": "      ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 1,
      "line": ">line 2<",
      "span": ">      <",
      "tokenKind": "PlainText",
    },
    Object {
      "indexOfLine": 1,
      "line": ">line 2<",
      "span": "      ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 1,
      "line": ">line 2<",
      "span": "      ><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`01 Tokenizer degenerate cases 1`] = `
Object {
  "buffer": "/***/",
  "tokens": Array [
    Object {
      "indexOfLine": -1,
      "line": "><",
      "span": "",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`01 Tokenizer degenerate cases 2`] = `
Object {
  "buffer": "/**[n] *[n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": "><",
      "span": "><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 0,
      "line": "><",
      "span": "><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`01 Tokenizer degenerate cases 3`] = `
Object {
  "buffer": "/**[n] [n] [n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": "><",
      "span": "><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 1,
      "line": "><",
      "span": "><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 1,
      "line": "><",
      "span": "><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`02 Backslash escapes: positive examples 1`] = `
Object {
  "buffer": "/**[n] * [b]$[b]@param[n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": ">    <        ",
      "tokenKind": "BackslashEscapedCharacter",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "    >    <    ",
      "tokenKind": "BackslashEscapedCharacter",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "        >     <",
      "tokenKind": "PlainText",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "             ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "             ><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`03 Backslash escapes: negative examples 1`] = `
Object {
  "buffer": "/**[n] * letter: [b]A space: [b]  end of line: [b][n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": ">                                         <",
      "tokenKind": "PlainText",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                                         ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                                         ><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;
