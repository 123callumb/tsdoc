// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`00 Tokenizer simple case 1`] = `
Object {
  "buffer": "/**[n] * line 1 [n] * line 2[n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": ">line 1<",
      "span": ">    < ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">line 1<",
      "span": "    > <",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">line 1<",
      "span": "     > <",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">line 1<",
      "span": "      ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 1,
      "line": ">line 2<",
      "span": ">    < ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 1,
      "line": ">line 2<",
      "span": "    > <",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 1,
      "line": ">line 2<",
      "span": "     > <",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 1,
      "line": ">line 2<",
      "span": "      ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 1,
      "line": ">line 2<",
      "span": "      ><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`01 Tokenizer degenerate cases 1`] = `
Object {
  "buffer": "/***/",
  "tokens": Array [
    Object {
      "indexOfLine": -1,
      "line": "><",
      "span": "",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`01 Tokenizer degenerate cases 2`] = `
Object {
  "buffer": "/**[n] *[n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": "><",
      "span": "><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 0,
      "line": "><",
      "span": "><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`01 Tokenizer degenerate cases 3`] = `
Object {
  "buffer": "/**[n] [n] [n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": "><",
      "span": "><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 1,
      "line": "><",
      "span": "><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 1,
      "line": "><",
      "span": "><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`02 Backslash escapes: positive examples 1`] = `
Object {
  "buffer": "/**[n] * [b]$[b]@param[n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": ">   <         ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "   > <        ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "    >   <     ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "       > <    ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "        >     <",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "             ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 0,
      "line": ">[b]$[b]@param<",
      "span": "             ><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`03 Backslash escapes: negative examples 1`] = `
Object {
  "buffer": "/**[n] * letter: [b]A space: [b]  end of line: [b][n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": ">      <                                  ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "      > <                                 ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "       > <                                ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "        >   <                             ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "           > <                            ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "            > <                           ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "             >     <                      ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                  > <                     ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                   > <                    ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                    >   <                 ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                       >  <               ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                         >   <            ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                            > <           ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                             >  <         ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                               > <        ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                                >    <    ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                                    > <   ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                                     > <  ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                                      >   <",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                                         ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 0,
      "line": ">letter: [b]A space: [b]  end of line: [b]<",
      "span": "                                         ><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`04 Block tags: positive examples 1`] = `
Object {
  "buffer": "/**[n] * @one @TWO @thRee[n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": "> <              ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": " >   <           ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": "    > <          ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": "     > <         ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": "      >   <      ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": "         > <     ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": "          > <    ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": "           >     <",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": "                ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@one @TWO @thRee<",
      "span": "                ><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;

exports[`05 Block tags: negative examples 1`] = `
Object {
  "buffer": "/**[n] * @ @@[n] * @one@two[n] * [b]@three[n] * @four, @five[b]a[n] */",
  "tokens": Array [
    Object {
      "indexOfLine": 0,
      "line": ">@ @@<",
      "span": "> <  ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@ @@<",
      "span": " > < ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@ @@<",
      "span": "  > <",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@ @@<",
      "span": "   > <",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 0,
      "line": ">@ @@<",
      "span": "    ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 1,
      "line": ">@one@two<",
      "span": "> <      ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 1,
      "line": ">@one@two<",
      "span": " >   <   ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 1,
      "line": ">@one@two<",
      "span": "    > <  ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 1,
      "line": ">@one@two<",
      "span": "     >   <",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 1,
      "line": ">@one@two<",
      "span": "        ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 2,
      "line": ">[b]@three<",
      "span": ">   <     ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 2,
      "line": ">[b]@three<",
      "span": "   > <    ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 2,
      "line": ">[b]@three<",
      "span": "    >     <",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 2,
      "line": ">[b]@three<",
      "span": "         ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": "> <              ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": " >    <          ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": "     > <         ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": "      > <        ",
      "tokenKind": "Spacing",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": "       > <       ",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": "        >    <   ",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": "            >   <",
      "tokenKind": "Punctuation",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": "               > <",
      "tokenKind": "AsciiWord",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": "                ><",
      "tokenKind": "Newline",
    },
    Object {
      "indexOfLine": 3,
      "line": ">@four, @five[b]a<",
      "span": "                ><",
      "tokenKind": "EndOfInput",
    },
  ],
}
`;
