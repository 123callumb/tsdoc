// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`01 HTML start tags: simple, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]tag/[>][n] * [<]tag-a /[>][n] * [<]tag-b [>][<]tag-c /[>][n] * [<]tag-d[n] * [>][n] * [<]tag-e[n] *      /[>]  [n] */",
  "lines": Array [
    "[<]tag/[>]",
    "[<]tag-a /[>]",
    "[<]tag-b [>][<]tag-c /[>]",
    "[<]tag-d",
    "[>]",
    "[<]tag-e",
    "     /[>]",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-a",
            "nodeSeparator": " ",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-b",
            "nodeSeparator": " ",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "[>]",
          },
        ],
      },
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-c",
            "nodeSeparator": " ",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-d",
            "nodeSeparator": "[n]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-e",
            "nodeSeparator": "[n]     ",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;

exports[`02 HTML start tags: simple, negative 1`] = `
Object {
  "buffer": "/**[n] * [<] tag/[>][n] * [<]tag -a /[>][n] * [<]tag-b /[<]tag-c / [>][n] * [<]tag-d[n] */",
  "lines": Array [
    "[<] tag/[>]",
    "[<]tag -a /[>]",
    "[<]tag-b /[<]tag-c / [>]",
    "[<]tag-d",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "errorLocation": " ",
        "errorLocationPrecedingToken": "<",
        "errorMessage": "Invalid HTML element: A space is not allowed here",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": " tag/",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": "-",
        "errorLocationPrecedingToken": " ",
        "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag -a /",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": "/",
        "errorLocationPrecedingToken": " ",
        "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-b /",
      },
      Object {
        "errorLocation": "/",
        "errorLocationPrecedingToken": " ",
        "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-c / ",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": " ",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": "",
        "errorLocationPrecedingToken": "
",
        "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-d",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;

exports[`03 HTML start tags: with attributes, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]tag-a attr-one=[q]one[q] [>][n] * [<]tag-b[n] *   attr-two[n] *   = [q]2[q][n] * /[>][n] */",
  "lines": Array [
    "[<]tag-a attr-one=[q]one[q] [>]",
    "[<]tag-b",
    "  attr-two",
    "  = [q]2[q]",
    "/[>]",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-a",
            "nodeSeparator": " ",
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "attr-one",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "[q]one[q]",
                "nodeSeparator": " ",
              },
            ],
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-b",
            "nodeSeparator": "[n]  ",
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "attr-two",
                "nodeSeparator": "[n]  ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
                "nodeSeparator": " ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "[q]2[q]",
                "nodeSeparator": "[n]",
              },
            ],
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;

exports[`03 HTML start tags: with attributes, positive 2`] = `
Object {
  "buffer": "/**[n] * [<]tag-c attr-three=[q]3[q] four='4'/[>][n] * [<]tag-d[n] *   attr-five[n] *   = [q]5[q][n] *   six[n] *   = '6'[n] * /[>][n] */",
  "lines": Array [
    "[<]tag-c attr-three=[q]3[q] four='4'/[>]",
    "[<]tag-d",
    "  attr-five",
    "  = [q]5[q]",
    "  six",
    "  = '6'",
    "/[>]",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-c",
            "nodeSeparator": " ",
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "attr-three",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "[q]3[q]",
                "nodeSeparator": " ",
              },
            ],
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "four",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "'4'",
              },
            ],
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-d",
            "nodeSeparator": "[n]  ",
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "attr-five",
                "nodeSeparator": "[n]  ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
                "nodeSeparator": " ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "[q]5[q]",
                "nodeSeparator": "[n]  ",
              },
            ],
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "six",
                "nodeSeparator": "[n]  ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
                "nodeSeparator": " ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "'6'",
                "nodeSeparator": "[n]",
              },
            ],
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;

exports[`03 HTML start tags: with attributes, positive 3`] = `
Object {
  "buffer": "/**[n] * [<]tag-e attr-one=[q]one[q] two='two'/[>][n] * [<]tag-f[n] *   attr-one[n] *   = [q]one[q][n] *   two[n] *   = 'two'[n] * /[>][n] */",
  "lines": Array [
    "[<]tag-e attr-one=[q]one[q] two='two'/[>]",
    "[<]tag-f",
    "  attr-one",
    "  = [q]one[q]",
    "  two",
    "  = 'two'",
    "/[>]",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-e",
            "nodeSeparator": " ",
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "attr-one",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "[q]one[q]",
                "nodeSeparator": " ",
              },
            ],
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "two",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "'two'",
              },
            ],
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-f",
            "nodeSeparator": "[n]  ",
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "attr-one",
                "nodeSeparator": "[n]  ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
                "nodeSeparator": " ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "[q]one[q]",
                "nodeSeparator": "[n]  ",
              },
            ],
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "two",
                "nodeSeparator": "[n]  ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
                "nodeSeparator": " ",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "'two'",
                "nodeSeparator": "[n]",
              },
            ],
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;

exports[`04 HTML start tags: with attributes, negative 1`] = `
Object {
  "buffer": "/**[n] * [<]tag-a attr -one=[q]one[q] /[>][n] * [<]tag-b attr- two=[q]two[q] /[>][n] * [<]tag-c attr-three='three[q] /[>][n] * [<]tag-d attr-four=@[q]four[q] /[>][n] * [<]tag-e attr-five@=[q]five[q] /[>][n] * [<]tag-f attr-six=[q]six[q]seven=[q]seven[q] /[>][n] */",
  "lines": Array [
    "[<]tag-a attr -one=[q]one[q] /[>]",
    "[<]tag-b attr- two=[q]two[q] /[>]",
    "[<]tag-c attr-three='three[q] /[>]",
    "[<]tag-d attr-four=@[q]four[q] /[>]",
    "[<]tag-e attr-five@=[q]five[q] /[>]",
    "[<]tag-f attr-six=[q]six[q]seven=[q]seven[q] /[>]",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "errorLocation": "-",
        "errorLocationPrecedingToken": " ",
        "errorMessage": "The HTML element has an invalid attribute: Expecting [q]=[q] after HTML attribute name",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-a attr -one=[q]one[q] /",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": "attr-",
        "errorLocationPrecedingToken": " ",
        "errorMessage": "The HTML element has an invalid attribute: An HTML name must be a sequence of letters separated by hyphens",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-b attr- two=[q]two[q] /",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": "'",
        "errorLocationPrecedingToken": "=",
        "errorMessage": "The HTML element has an invalid attribute: The HTML string is missing its closing quote",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-c attr-three='three[q] /",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": "@",
        "errorLocationPrecedingToken": "=",
        "errorMessage": "The HTML element has an invalid attribute: Expecting an HTML string starting with a single-quote or double-quote character",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-d attr-four=",
      },
      Object {
        "errorLocation": "@",
        "errorLocationPrecedingToken": "=",
        "errorMessage": "A TSDoc tag must be preceded by whitespace",
        "kind": "ErrorText",
        "nodePrefix": "@",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "[q]four[q] /",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": "@",
        "errorLocationPrecedingToken": "five",
        "errorMessage": "The HTML element has an invalid attribute: Expecting [q]=[q] after HTML attribute name",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-e attr-five",
      },
      Object {
        "errorLocation": "@",
        "errorLocationPrecedingToken": "five",
        "errorMessage": "A TSDoc tag must be preceded by whitespace",
        "kind": "ErrorText",
        "nodePrefix": "@",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "=[q]five[q] /",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": "seven",
        "errorLocationPrecedingToken": "\\"",
        "errorMessage": "The HTML element has an invalid attribute: The next character after a closing quote must be spacing or punctuation",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-f attr-six=[q]six[q]seven=[q]seven[q] /",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;

exports[`04 HTML start tags: with attributes, negative 2`] = `
Object {
  "buffer": "/**[n] * [<]tag-g attr=[q]multi[n] * line[q] /[>][n] */",
  "lines": Array [
    "[<]tag-g attr=[q]multi",
    "line[q] /[>]",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "errorLocation": "[q]",
        "errorLocationPrecedingToken": "=",
        "errorMessage": "The HTML element has an invalid attribute: The HTML string is missing its closing quote",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "tag-g attr=[q]multi",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "line[q] /",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;

exports[`05 Eclipsed TSDoc 1`] = `
Object {
  "buffer": "/**[n] * [<]tag attr-one=[q]@tag[q] /[>][n] */",
  "lines": Array [
    "[<]tag attr-one=[q]@tag[q] /[>]",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "kind": "HtmlStartTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag",
            "nodeSeparator": " ",
          },
          Object {
            "kind": "HtmlAttribute",
            "nodes": Array [
              Object {
                "kind": "Particle",
                "nodePrefix": "attr-one",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "=",
              },
              Object {
                "kind": "Particle",
                "nodePrefix": "[q]@tag[q]",
                "nodeSeparator": " ",
              },
            ],
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "/[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;

exports[`06 Closing tags, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]/tag-a[>][n] * [<]/tag-b  [>][n] * [<]/tag-c[n] *   [>][n] */",
  "lines": Array [
    "[<]/tag-a[>]",
    "[<]/tag-b  [>]",
    "[<]/tag-c",
    "  [>]",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "kind": "HtmlEndTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]/",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-a",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "HtmlEndTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]/",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-b",
            "nodeSeparator": "  ",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "kind": "HtmlEndTag",
        "nodes": Array [
          Object {
            "kind": "Particle",
            "nodePrefix": "[<]/",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "tag-c",
            "nodeSeparator": "[n]  ",
          },
          Object {
            "kind": "Particle",
            "nodePrefix": "[>]",
          },
        ],
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;

exports[`07 Closing tags, negative 1`] = `
Object {
  "buffer": "/**[n] * [<]/tag-a/[>][n] * [<]/ tag-b[>][n] * [<]/tag-c[n] */",
  "lines": Array [
    "[<]/tag-a/[>]",
    "[<]/ tag-b[>]",
    "[<]/tag-c",
  ],
  "rootNode": Object {
    "kind": "Section",
    "nodes": Array [
      Object {
        "errorLocation": "/",
        "errorLocationPrecedingToken": "a",
        "errorMessage": "Expecting a closing [q][>][q] for the HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "/tag-a/",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": " ",
        "errorLocationPrecedingToken": "/",
        "errorMessage": "Expecting an HTML element name: A space is not allowed here",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "/ tag-b",
      },
      Object {
        "errorLocation": "[>]",
        "errorLocationPrecedingToken": "b",
        "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[>]",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
      Object {
        "errorLocation": "",
        "errorLocationPrecedingToken": "
",
        "errorMessage": "Expecting a closing [q][>][q] for the HTML tag",
        "kind": "ErrorText",
        "nodePrefix": "[<]",
      },
      Object {
        "kind": "PlainText",
        "nodePrefix": "/tag-c",
      },
      Object {
        "kind": "SoftBreak",
        "nodePrefix": "[n]",
      },
    ],
  },
}
`;
