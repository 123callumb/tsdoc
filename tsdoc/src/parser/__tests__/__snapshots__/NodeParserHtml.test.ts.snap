// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`01 HTML start tags: simple, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]tag/[>][n] * [<]tag-a /[>][n] * [<]tag-b [>][<]tag-c /[>][n] * [<]tag-d[n] * [>][n] * [<]tag-e[n] *      /[>]  [n] */",
  "lines": Array [
    "[<]tag/[>]",
    "[<]tag-a /[>]",
    "[<]tag-b [>][<]tag-c /[>]",
    "[<]tag-d",
    "[>]",
    "[<]tag-e",
    "     /[>]",
  ],
  "logMessages": Array [],
  "verbatimNodes": Array [
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-a",
          "nodeSpacing": " ",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-b",
          "nodeSpacing": " ",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[>]",
        },
      ],
    },
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-c",
          "nodeSpacing": " ",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-d",
          "nodeSpacing": "[n]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-e",
          "nodeSpacing": "[n]     ",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;

exports[`02 HTML start tags: simple, negative 1`] = `
Object {
  "buffer": "/**[n] * [<] tag/[>][n] * [<]tag -a /[>][n] * [<]tag-b /[<]tag-c / [>][n] * [<]tag-d[n] */",
  "lines": Array [
    "[<] tag/[>]",
    "[<]tag -a /[>]",
    "[<]tag-b /[<]tag-c / [>]",
    "[<]tag-d",
  ],
  "logMessages": Array [
    "(2,5): Invalid HTML element: A space is not allowed here",
    "(2,10): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(3,9): The HTML tag has invalid syntax: Expecting an attribute or \\">\\" or \\"/>\\"",
    "(3,13): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(4,11): The HTML tag has invalid syntax: Expecting an attribute or \\">\\" or \\"/>\\"",
    "(4,19): The HTML tag has invalid syntax: Expecting an attribute or \\">\\" or \\"/>\\"",
    "(4,21): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(5,10): The HTML tag has invalid syntax: Expecting an attribute or \\">\\" or \\"/>\\"",
  ],
  "verbatimNodes": Array [
    Object {
      "errorLocation": " ",
      "errorLocationPrecedingToken": "<",
      "errorMessage": "Invalid HTML element: A space is not allowed here",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": " tag/",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": "-",
      "errorLocationPrecedingToken": " ",
      "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag -a /",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": "/",
      "errorLocationPrecedingToken": " ",
      "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-b /",
    },
    Object {
      "errorLocation": "/",
      "errorLocationPrecedingToken": " ",
      "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-c / ",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": " ",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": "",
      "errorLocationPrecedingToken": "
",
      "errorMessage": "The HTML tag has invalid syntax: Expecting an attribute or [q][>][q] or [q]/[>][q]",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-d",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;

exports[`03 HTML start tags: with attributes, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]tag-a attr-one=[q]one[q] [>][n] * [<]tag-b[n] *   attr-two[n] *   = [q]2[q][n] * /[>][n] */",
  "lines": Array [
    "[<]tag-a attr-one=[q]one[q] [>]",
    "[<]tag-b",
    "  attr-two",
    "  = [q]2[q]",
    "/[>]",
  ],
  "logMessages": Array [],
  "verbatimNodes": Array [
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-a",
          "nodeSpacing": " ",
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "attr-one",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "[q]one[q]",
              "nodeSpacing": " ",
            },
          ],
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-b",
          "nodeSpacing": "[n]  ",
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "attr-two",
              "nodeSpacing": "[n]  ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
              "nodeSpacing": " ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "[q]2[q]",
              "nodeSpacing": "[n]",
            },
          ],
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;

exports[`03 HTML start tags: with attributes, positive 2`] = `
Object {
  "buffer": "/**[n] * [<]tag-c attr-three=[q]3[q] four='4'/[>][n] * [<]tag-d[n] *   attr-five[n] *   = [q]5[q][n] *   six[n] *   = '6'[n] * /[>][n] */",
  "lines": Array [
    "[<]tag-c attr-three=[q]3[q] four='4'/[>]",
    "[<]tag-d",
    "  attr-five",
    "  = [q]5[q]",
    "  six",
    "  = '6'",
    "/[>]",
  ],
  "logMessages": Array [],
  "verbatimNodes": Array [
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-c",
          "nodeSpacing": " ",
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "attr-three",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "[q]3[q]",
              "nodeSpacing": " ",
            },
          ],
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "four",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "'4'",
            },
          ],
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-d",
          "nodeSpacing": "[n]  ",
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "attr-five",
              "nodeSpacing": "[n]  ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
              "nodeSpacing": " ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "[q]5[q]",
              "nodeSpacing": "[n]  ",
            },
          ],
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "six",
              "nodeSpacing": "[n]  ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
              "nodeSpacing": " ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "'6'",
              "nodeSpacing": "[n]",
            },
          ],
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;

exports[`03 HTML start tags: with attributes, positive 3`] = `
Object {
  "buffer": "/**[n] * [<]tag-e attr-one=[q]one[q] two='two'/[>][n] * [<]tag-f[n] *   attr-one[n] *   = [q]one[q][n] *   two[n] *   = 'two'[n] * /[>][n] */",
  "lines": Array [
    "[<]tag-e attr-one=[q]one[q] two='two'/[>]",
    "[<]tag-f",
    "  attr-one",
    "  = [q]one[q]",
    "  two",
    "  = 'two'",
    "/[>]",
  ],
  "logMessages": Array [],
  "verbatimNodes": Array [
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-e",
          "nodeSpacing": " ",
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "attr-one",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "[q]one[q]",
              "nodeSpacing": " ",
            },
          ],
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "two",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "'two'",
            },
          ],
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-f",
          "nodeSpacing": "[n]  ",
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "attr-one",
              "nodeSpacing": "[n]  ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
              "nodeSpacing": " ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "[q]one[q]",
              "nodeSpacing": "[n]  ",
            },
          ],
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "two",
              "nodeSpacing": "[n]  ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
              "nodeSpacing": " ",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "'two'",
              "nodeSpacing": "[n]",
            },
          ],
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;

exports[`04 HTML start tags: with attributes, negative 1`] = `
Object {
  "buffer": "/**[n] * [<]tag-a attr -one=[q]one[q] /[>][n] * [<]tag-b attr- two=[q]two[q] /[>][n] * [<]tag-c attr-three='three[q] /[>][n] * [<]tag-d attr-four=@[q]four[q] /[>][n] * [<]tag-e attr-five@=[q]five[q] /[>][n] * [<]tag-f attr-six=[q]six[q]seven=[q]seven[q] /[>][n] */",
  "lines": Array [
    "[<]tag-a attr -one=[q]one[q] /[>]",
    "[<]tag-b attr- two=[q]two[q] /[>]",
    "[<]tag-c attr-three='three[q] /[>]",
    "[<]tag-d attr-four=@[q]four[q] /[>]",
    "[<]tag-e attr-five@=[q]five[q] /[>]",
    "[<]tag-f attr-six=[q]six[q]seven=[q]seven[q] /[>]",
  ],
  "logMessages": Array [
    "(2,16): The HTML element has an invalid attribute: Expecting \\"=\\" after HTML attribute name",
    "(2,28): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(3,11): The HTML element has an invalid attribute: An HTML name must be a sequence of letters separated by hyphens",
    "(3,28): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(4,22): The HTML element has an invalid attribute: The HTML string is missing its closing quote",
    "(4,31): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(5,21): The HTML element has an invalid attribute: Expecting an HTML string starting with a single-quote or double-quote character",
    "(5,21): A TSDoc tag must be preceded by whitespace",
    "(5,30): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(6,20): The HTML element has an invalid attribute: Expecting \\"=\\" after HTML attribute name",
    "(6,20): A TSDoc tag must be preceded by whitespace",
    "(6,30): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(7,25): The HTML element has an invalid attribute: The next character after a closing quote must be spacing or punctuation",
    "(7,40): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
  ],
  "verbatimNodes": Array [
    Object {
      "errorLocation": "-",
      "errorLocationPrecedingToken": " ",
      "errorMessage": "The HTML element has an invalid attribute: Expecting [q]=[q] after HTML attribute name",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-a attr -one=[q]one[q] /",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": "attr-",
      "errorLocationPrecedingToken": " ",
      "errorMessage": "The HTML element has an invalid attribute: An HTML name must be a sequence of letters separated by hyphens",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-b attr- two=[q]two[q] /",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": "'",
      "errorLocationPrecedingToken": "=",
      "errorMessage": "The HTML element has an invalid attribute: The HTML string is missing its closing quote",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-c attr-three='three[q] /",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": "@",
      "errorLocationPrecedingToken": "=",
      "errorMessage": "The HTML element has an invalid attribute: Expecting an HTML string starting with a single-quote or double-quote character",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-d attr-four=",
    },
    Object {
      "errorLocation": "@",
      "errorLocationPrecedingToken": "=",
      "errorMessage": "A TSDoc tag must be preceded by whitespace",
      "kind": "ErrorText",
      "nodeExcerpt": "@",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "[q]four[q] /",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": "@",
      "errorLocationPrecedingToken": "five",
      "errorMessage": "The HTML element has an invalid attribute: Expecting [q]=[q] after HTML attribute name",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-e attr-five",
    },
    Object {
      "errorLocation": "@",
      "errorLocationPrecedingToken": "five",
      "errorMessage": "A TSDoc tag must be preceded by whitespace",
      "kind": "ErrorText",
      "nodeExcerpt": "@",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "=[q]five[q] /",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": "seven",
      "errorLocationPrecedingToken": "\\"",
      "errorMessage": "The HTML element has an invalid attribute: The next character after a closing quote must be spacing or punctuation",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-f attr-six=[q]six[q]seven=[q]seven[q] /",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;

exports[`04 HTML start tags: with attributes, negative 2`] = `
Object {
  "buffer": "/**[n] * [<]tag-g attr=[q]multi[n] * line[q] /[>][n] */",
  "lines": Array [
    "[<]tag-g attr=[q]multi",
    "line[q] /[>]",
  ],
  "logMessages": Array [
    "(2,16): The HTML element has an invalid attribute: The HTML string is missing its closing quote",
    "(3,11): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
  ],
  "verbatimNodes": Array [
    Object {
      "errorLocation": "[q]",
      "errorLocationPrecedingToken": "=",
      "errorMessage": "The HTML element has an invalid attribute: The HTML string is missing its closing quote",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "tag-g attr=[q]multi",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "line[q] /",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;

exports[`05 Eclipsed TSDoc 1`] = `
Object {
  "buffer": "/**[n] * [<]tag attr-one=[q]@tag[q] /[>][n] */",
  "lines": Array [
    "[<]tag attr-one=[q]@tag[q] /[>]",
  ],
  "logMessages": Array [],
  "verbatimNodes": Array [
    Object {
      "kind": "HtmlStartTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag",
          "nodeSpacing": " ",
        },
        Object {
          "kind": "HtmlAttribute",
          "nodes": Array [
            Object {
              "kind": "Particle",
              "nodeExcerpt": "attr-one",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "=",
            },
            Object {
              "kind": "Particle",
              "nodeExcerpt": "[q]@tag[q]",
              "nodeSpacing": " ",
            },
          ],
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "/[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;

exports[`06 Closing tags, positive 1`] = `
Object {
  "buffer": "/**[n] * [<]/tag-a[>][n] * [<]/tag-b  [>][n] * [<]/tag-c[n] *   [>][n] */",
  "lines": Array [
    "[<]/tag-a[>]",
    "[<]/tag-b  [>]",
    "[<]/tag-c",
    "  [>]",
  ],
  "logMessages": Array [],
  "verbatimNodes": Array [
    Object {
      "kind": "HtmlEndTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]/",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-a",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "HtmlEndTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]/",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-b",
          "nodeSpacing": "  ",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "kind": "HtmlEndTag",
      "nodes": Array [
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[<]/",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "tag-c",
          "nodeSpacing": "[n]  ",
        },
        Object {
          "kind": "Particle",
          "nodeExcerpt": "[>]",
        },
      ],
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;

exports[`07 Closing tags, negative 1`] = `
Object {
  "buffer": "/**[n] * [<]/tag-a/[>][n] * [<]/ tag-b[>][n] * [<]/tag-c[n] */",
  "lines": Array [
    "[<]/tag-a/[>]",
    "[<]/ tag-b[>]",
    "[<]/tag-c",
  ],
  "logMessages": Array [
    "(2,11): Expecting a closing \\">\\" for the HTML tag",
    "(2,12): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(3,6): Expecting an HTML element name: A space is not allowed here",
    "(3,12): The \\">\\" character should be escaped using a backslash to avoid confusion with an HTML tag",
    "(4,11): Expecting a closing \\">\\" for the HTML tag",
  ],
  "verbatimNodes": Array [
    Object {
      "errorLocation": "/",
      "errorLocationPrecedingToken": "a",
      "errorMessage": "Expecting a closing [q][>][q] for the HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "/tag-a/",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": " ",
      "errorLocationPrecedingToken": "/",
      "errorMessage": "Expecting an HTML element name: A space is not allowed here",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "/ tag-b",
    },
    Object {
      "errorLocation": "[>]",
      "errorLocationPrecedingToken": "b",
      "errorMessage": "The [q][>][q] character should be escaped using a backslash to avoid confusion with an HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[>]",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
    Object {
      "errorLocation": "",
      "errorLocationPrecedingToken": "
",
      "errorMessage": "Expecting a closing [q][>][q] for the HTML tag",
      "kind": "ErrorText",
      "nodeExcerpt": "[<]",
    },
    Object {
      "kind": "PlainText",
      "nodeExcerpt": "/tag-c",
    },
    Object {
      "kind": "SoftBreak",
      "nodeExcerpt": "[n]",
    },
  ],
}
`;
